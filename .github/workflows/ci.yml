---

name: Build

env:
  DCS_BASE_VERSION: 2.8.8

on:
  push:
    branches: [master]
  workflow_dispatch:


jobs:
  package:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          fetch-tags: true

      - name: Find Tag
        id: tag
        run: |
          # Get our new version from existing git tags
          NEW_VER="${DCS_BASE_VERSION}.$(git tag -l ${DCS_BASE_VERSION}.* | awk -F. 'BEGIN { N=0 } { if ($NF > N) N = $NF } END { print N+1 }')"

          echo "New version: ${NEW_VER}"

          # Save it for next steps
          echo "TAG_VERSION=$NEW_VER" >> "$GITHUB_ENV"

      - name: Tag Version
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: `refs/tags/${process.env.TAG_VERSION}`,
              sha: context.sha
            })

      - name: Package Miz
        run: |
          # Zip up our 
          zip -r -q ATRM-${TAG_VERSION}.miz . -x *.md *.yml

      - name: Release
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');

            let release = github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: `${process.env.TAG_VERSION}`
            })

            github.rest.repos.uploadReleaseAsset({
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: `ATRM-${process.env.TAG_VERSION}.miz`,
              release_id: release.id,
              data: await fs.readFileSync(`ATRM-${process.env.TAG_VERSION}.miz`)
            })

